/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 hacker-room-new.glb -T 
Files: hacker-room-new.glb [34.62MB] > /Users/hsuwinlat/Desktop/jsm pj/threejscc-portfolio/public/models/hacker-room-new-transformed.glb [2.56MB] (93%)
*/

import { useGLTF, useTexture } from '@react-three/drei';

export function HackerRoom(props) {
  // Loading the 3D model
  const { scene, nodes, materials } = useGLTF('/models/hacker-room.glb');

  // Chargement des textures pour les écrans
  const monitortxt = useTexture('textures/desk/monitor.png');
  const screenTxt = useTexture('textures/desk/screen.png');

  // Error handling for missing geometry
  if (!nodes || !materials) {
    console.error('Failed to load 3D model:', { nodes, materials });
    return null;
  }

   // Retourne un groupe de meshes (objets 3D)
  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
         <group position={[-34.318, 228.922, 250.863]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Room_Material_0.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Room_EEVEE_Architectural_Glass_0.geometry}
            material={materials.EEVEE_Architectural_Glass}
          >
            <meshMatcapMaterial map={screenTxt} />
          </mesh>
          <group position={[-19.58, -129.73, -69.708]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Setup_Material_0.geometry}
              material={materials.Material}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Setup_Material001_0.geometry}
              material={materials['Material.001']}
            >
              <meshMatcapMaterial map={screenTxt} />
            </mesh>
          </group>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Chair_Material_0.geometry}
            material={materials.Material}
            position={[-61.627, -149.74, -252.357]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Door_Material_0.geometry}
            material={materials.Material}
            position={[-298.42, -83.427, -204.755]}
          />
        </group>
      </group>
      
    </group>
  );
}


// Préchargement du modèle 3D pour de meilleures performances
useGLTF.preload('/models/hacker-room.glb');